    #./containerlab.good destroy --cleanup --all
    #./containerlab.good deploy --timeout 5m0s
    #./containerlab.good inspect
    # docker exec -it checkpoint-lab-checkpoint-cloudguard tail -f /console.log
    #ssh admin@checkpoint-lab-checkpoint-cloudguard

name: mgmt
prefix: cp

topology:
  nodes:
    ubuntu:
      kind: linux
      image: ubuntu:latest
      memory: 256MB
      cpu: 0.5
      mgmt_ipv4: 172.20.20.10
      binds:
        - setup_ubuntu.sh:/tmp/setup.sh
      exec:
        - bash /tmp/setup.sh
        - ip addr add dev eth1 10.10.1.10/24
        - ip route add 10.0.0.0/8 via 10.10.1.100
        - echo 1 > /proc/sys/net/ipv4/ip_forward

    alpine:
      kind: linux
      image: alpine:latest
      memory: 256MB
      cpu: 0.5
      mgmt_ipv4: 172.20.20.11
      sysctls:
        net.ipv4.ip_forward: 1
      binds:
        - setup_alpine.sh:/tmp/setup.sh
      exec:
        - sh /tmp/setup.sh
        - ip addr add dev eth1 10.10.10.11/24
        - ip route add 10.0.0.0/8 via 10.10.10.100
      publish:
        - tcp/22

    cloudguard_mgmtgw:
      kind: checkpoint_cloudguard
      image: ghcr.io/chkp-antonr/cp_cloudguard_mgmt:R81.10
      memory: 16GB
      cpu: 6
#      ports:
#        - 54430:443
#        - 19009:19009
#        - 18190:18190
#        - 18264:18264
      mgmt_ipv4: 172.20.20.100
      mgmt_ipv6: 2001:172:20:20::100
      # run setup_mgmtgw.sh for initial settings
      # eth1: 10.10.1.100 to ubuntu
      # eth2: 10.10.10.100 to gw1

  links:
    - endpoints: ["ubuntu:eth1", "cloudguard_mgmtgw:eth1"]
    - endpoints: ["cloudguard_mgmtgw:eth2", "alpine:eth1"]
